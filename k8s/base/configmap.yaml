apiVersion: v1
kind: ConfigMap
metadata:
  name: plataforma-config
  namespace: plataforma
  labels:
    app: plataforma
    component: config
data:
  # Application configuration
  NODE_ENV: "production"
  PORT: "4000"
  HOST: "0.0.0.0"
  LOG_LEVEL: "info"
  
  # Security configuration
  SECURITY_AUDIT_ENABLED: "true"
  SECURITY_CSP_ENABLED: "true"
  SECURITY_RBAC_ENABLED: "true"
  RATE_LIMIT_ENABLED: "true"
  
  # Database configuration
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "plataforma"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Monitoring
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  
  # Feature flags
  DEMO_MODE: "false"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: plataforma
  labels:
    app: plataforma
    component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        server_tokens off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

        upstream backend {
            server backend-service:4000;
        }

        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;

            location = /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            location /api/ {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }

            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }